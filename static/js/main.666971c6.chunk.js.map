{"version":3,"sources":["components/Notification/Notification.js","contexts/user-context.js","redux/actions.js","fixtures-members.js","components/Calendar/Event/Event.js","redux/constants.js","components/Calendar/Calendar-header/Calendar-header.js","utils/constants.js","components/Calendar/Calendar-body/Calendar-body-column/Calendar-body-column.js","components/Calendar/Calendar-body/Calendar-body-hours-column/Calendar-body-hours-column.js","components/Calendar/Calendar-body/Calendar-body.js","components/Calendar/Calendar-footer/Calendar-footer.js","components/Calendar/Calendar.js","components/Create-event-form/Create-event-form.js","components/Login-modal/Login-modal.js","pages/Calendar-page/Calendar-page.js","pages/error404/Error-page.js","components/App/App.js","redux/reducer/events.js","redux/reducer/users.js","redux/reducer/index.js","redux/store.js","index.js"],"names":["Notification","message","status","useState","show","setShow","useEffect","Toast","onClose","delay","autohide","Body","className","uuid","guest","noMembersMock","userContext","createContext","defaultSessionUser","UserProvider","Provider","Consumer","BACKEND_URL","SYSTEM","ENTITY_EVENTS","loadEvents","dispatch","a","type","LOAD_EVENTS","REQUEST","fetch","response","json","result","data","SUCCESS","map","item","id","JSON","parse","FAILURE","error","loadUsers","LOAD_USERS","postEvent","eventData","method","headers","body","stringify","then","res","ok","isEventPosted","POST_EVENT","deleteEvent","deletingEventId","isEventDeleted","DELETE_EVENT","name","rights","connect","event","setNewNotification","sessionUser","useContext","isDeleteEvent","global","confirm","getEvent","draggable","data-meeting","data-meeting-day","day","data-meeting-time","time","data-delete","onClick","renedredEvent","renderEvent","state","users","entities","setSortingBy","getNewEventButton","to","newEventButton","setNewEventButton","onChange","ev","userid","target","selectedIndex","getAttribute","value","data-userid","user","data-rights","DAYS","WORKING_DAY_START","CalendarBodyColumn","events","sortingBy","filteredByDayEventsData","filter","members","some","Array","WORKING_DAY_END","_","i","timeSlot","data-time","data-day","Event","find","CalendarBodyHoursColumn","CalendarFooter","setSessionUser","Calendar","setMembersChoosenByDefault","isChoosen","history","useHistory","setEventData","isChoosenMembers","setIsChoosenMembers","membersDropdown","isChecked","checked","member","htmlFor","userId","console","log","daysDropdown","hoursDropdown","handleSubmit","preventDefault","length","setTimeout","push","onSubmit","placeholder","data-name","loadingUsers","loading","loadedUsers","loaded","sessionUserName","setSessionUserName","showModal","setShowModal","handleCloseModal","Modal","onHide","backdrop","keyboard","Header","Title","Footer","Button","variant","errorUsers","loadingEvents","loadedEvents","errorEvents","useReducer","action","croppedNotifications","notificationsStore","slice","newNotificationData","Error","notification","isShow","handleIsShow","renderedNotifications","Fragment","path","exact","aria-live","aria-atomic","ErrorPage","from","component","initialState","combineReducers","enhancer","applyMiddleware","thunk","createStore","reducer","composeWithDevTools","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.666971c6.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { Toast } from 'react-bootstrap';\n\nimport { v4 as uuid } from 'uuid';\n\nimport './style.scss';\n\nfunction Notification({ message, status }) {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    setShow(true);\n  }, []);\n\n  return (\n    <Toast\n      key={uuid()}\n      onClose={() => setShow(false)}\n      show={show}\n      delay={2000}\n      autohide\n    >\n      <Toast.Body className={`calendar__toast_${status}`}>{message}</Toast.Body>\n    </Toast>\n  );\n}\n\nexport default Notification;\n","import { createContext } from 'react';\nimport { noMembersMock } from '../fixtures-members';\n\nconst [guest] = noMembersMock;\nexport const userContext = createContext({ defaultSessionUser: guest });\n\nexport const UserProvider = userContext.Provider;\nexport const UserConsumer = userContext.Consumer;\n","import { noMembersMock } from '../fixtures-members';\nimport {\n  LOAD_EVENTS,\n  LOAD_USERS,\n  POST_EVENT,\n  DELETE_EVENT,\n  REQUEST,\n  SUCCESS,\n  FAILURE,\n} from './constants';\n\nconst BACKEND_URL = 'http://158.101.166.74:8080/api/data';\nconst SYSTEM = 'yevhenii_zhyrov';\nconst ENTITY_EVENTS = 'events';\nconst ENTITY_USERS = 'users';\n\nexport const loadEvents = () => async (dispatch) => {\n  dispatch({ type: LOAD_EVENTS + REQUEST });\n  try {\n    const response = await fetch(`${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}`);\n    const result = await response.json();\n\n    if (result === null) {\n      const data = [];\n\n      dispatch({ type: LOAD_EVENTS + SUCCESS, data });\n\n      return data;\n    }\n\n    const data = result.map((item) => ({\n      id: item.id,\n      data: JSON.parse(item.data),\n    }));\n\n    dispatch({ type: LOAD_EVENTS + SUCCESS, data });\n\n    return data;\n  } catch (error) {\n    const data = [];\n\n    dispatch({ type: LOAD_EVENTS + FAILURE, error });\n\n    return data;\n  }\n};\n\nexport const loadUsers = () => async (dispatch) => {\n  dispatch({ type: LOAD_USERS + REQUEST });\n  try {\n    const response = await fetch(`${BACKEND_URL}/${SYSTEM}/${ENTITY_USERS}`);\n    const result = await response.json();\n\n    if (result === null) {\n      const data = noMembersMock;\n\n      dispatch({ type: LOAD_USERS + SUCCESS, data });\n\n      return data;\n    }\n\n    const data = result.map((item) => ({\n      id: item.id,\n      data: JSON.parse(item.data),\n    }));\n\n    dispatch({ type: LOAD_USERS + SUCCESS, data });\n\n    return data;\n  } catch (error) {\n    const data = noMembersMock;\n\n    dispatch({ type: LOAD_USERS + FAILURE, error });\n\n    return data;\n  }\n};\n\nexport const postEvent = (eventData) => async (dispatch) => {\n  try {\n    const isEventPosted = await fetch(\n      `${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify({\n          data: JSON.stringify(eventData),\n        }),\n      }\n    ).then((res) => {\n      if (res.ok) {\n        return true;\n      }\n\n      return false;\n    });\n    dispatch({ type: POST_EVENT });\n\n    return isEventPosted;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport const deleteEvent = (deletingEventId) => async (dispatch) => {\n  try {\n    const isEventDeleted = await fetch(\n      `${BACKEND_URL}/${SYSTEM}/${ENTITY_EVENTS}/${deletingEventId}`,\n      {\n        method: 'DELETE',\n      }\n    ).then((res) => {\n      if (res.ok) {\n        return true;\n      }\n\n      return false;\n    });\n\n    dispatch({ type: DELETE_EVENT, deletingEventId });\n\n    return isEventDeleted;\n  } catch (error) {\n    return false;\n  }\n};\n","export const membersMock = [\n  { id: '0001', data: { name: 'Polina', rights: 'admin' } },\n  { id: '0002', data: { name: 'Maria', rights: 'user' } },\n  { id: '0003', data: { name: 'Bob', rights: 'user' } },\n  { id: '0004', data: { name: 'Alex', rights: 'user' } },\n];\n\nexport const noMembersMock = [\n  { id: '0000', data: { name: 'guest', rights: 'user' } },\n];\n","/* eslint-disable no-shadow */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { userContext } from '../../../contexts/user-context';\nimport Notification from '../../Notification';\nimport { deleteEvent } from '../../../redux/actions';\n\nfunction Event({ event, deleteEvent, setNewNotification }) {\n  const { sessionUser } = useContext(userContext);\n\n  const isDeleteEvent = async () => {\n    const modal = global.confirm(\n      `Are you sure you want to delete '${event.data.name}' event?`\n    );\n\n    if (modal) {\n      const isEventDeleted = await deleteEvent(event.id);\n\n      if (isEventDeleted) {\n        return setNewNotification(\n          <Notification\n            message=\"API: event deleted successfully\"\n            status=\"successful\"\n          />\n        );\n      }\n\n      return setNewNotification(\n        <Notification\n          message=\"Something went wrong with deleteng event\"\n          status=\"warning\"\n        />\n      );\n    }\n\n    return setNewNotification(<Notification message=\"Action was undone\" />);\n  };\n\n  const getEvent = () => {\n    if (sessionUser && sessionUser.data.rights === 'admin') {\n      return (\n        <div\n          draggable=\"true\"\n          data-meeting={event.id}\n          data-meeting-day={event.data.day}\n          data-meeting-time={event.data.time}\n        >\n          <div className=\"calendar__table-column_meeting\">\n            {event.data.name}\n          </div>\n          <button\n            type=\"button\"\n            className=\"calendar__table-column_meeting_delete\"\n            data-delete=\"delete\"\n            onClick={isDeleteEvent}\n          >\n            &times;\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        draggable=\"true\"\n        data-meeting={event.id}\n        data-meeting-day={event.data.day}\n        data-meeting-time={event.data.time}\n      >\n        <div className=\"calendar__table-column_meeting\">{event.data.name}</div>\n      </div>\n    );\n  };\n\n  const [renedredEvent, renderEvent] = useState(getEvent());\n\n  useEffect(() => {\n    renderEvent(getEvent());\n  }, [sessionUser]);\n\n  return renedredEvent;\n}\n\nexport default connect(null, { deleteEvent })(Event);\n","export const LOAD_EVENTS = 'LOAD_EVENTS';\nexport const LOAD_USERS = 'LOAD_USERS';\n\nexport const POST_EVENT = 'POST_EVENT';\nexport const DELETE_EVENT = 'DELETE_EVENT';\n\nexport const REQUEST = '_REQUEST';\nexport const SUCCESS = '_SUCCESS';\nexport const FAILURE = '_FAILURE';\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable consistent-return */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useContext, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { userContext } from '../../../contexts/user-context';\n\nfunction CalendarHeader({ users, setSortingBy }) {\n  const { sessionUser } = useContext(userContext);\n\n  const getNewEventButton = () => {\n    if (sessionUser && sessionUser.data.rights === 'admin') {\n      return (\n        <Link to=\"/meeting-planning-calendar-react/create-event\">\n          <button\n            type=\"submit\"\n            name=\"newEvent\"\n            className=\"btn btn-outline-dark\"\n          >\n            New event +\n          </button>\n        </Link>\n      );\n    }\n\n    return (\n      <button\n        type=\"submit\"\n        name=\"newEvent\"\n        className=\"btn btn-outline-dark disabled\"\n      >\n        New event +\n      </button>\n    );\n  };\n\n  const [newEventButton, setNewEventButton] = useState(getNewEventButton());\n\n  useEffect(() => {\n    setNewEventButton(getNewEventButton());\n  }, [sessionUser]);\n\n  return (\n    <div className=\"calendar__header\">\n      <div>\n        <h1>Calendar</h1>\n      </div>\n      <div className=\"calendar__header_handling\">\n        <div className=\"calendar__header_handling-dropdown\">\n          <select\n            className=\"form-select form-select-lg\"\n            id=\"membersDropdown\"\n            onChange={(ev) => {\n              const userid = ev.target[ev.target.selectedIndex].getAttribute(\n                'data-userid'\n              );\n\n              setSortingBy(userid);\n            }}\n          >\n            <option value=\"All members\" data-userid=\"All members\">\n              All members\n            </option>\n            {users.map((user) => (\n              <option\n                key={user.id}\n                value={user.data.name}\n                data-userid={user.id}\n                data-rights={user.data.rights}\n              >\n                {user.data.name} ({user.data.rights})\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"calendar__header_handling-newEventCreatingButton\">\n          {newEventButton}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  users: state.users.entities,\n}))(CalendarHeader);\n","export const DAYS = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'];\n\nexport const WORKING_DAY_START = 10;\nexport const WORKING_DAY_END = 18;\nexport const WORKING_DAY_TIMESLOTS_QUANTITY =\n  WORKING_DAY_END - WORKING_DAY_START + 1;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Event from '../../Event';\n\nimport {\n  WORKING_DAY_START,\n  WORKING_DAY_TIMESLOTS_QUANTITY,\n} from '../../../../utils/constants';\n\nfunction CalendarBodyColumn({ day, events, sortingBy, setNewNotification }) {\n  if (events) {\n    let filteredByDayEventsData = [...events].filter(\n      (event) => event.data.day === day\n    );\n\n    if (sortingBy === 'All members') {\n      filteredByDayEventsData = [...events].filter(\n        (event) => event.data.day === day\n      );\n    }\n\n    if (sortingBy !== 'All members') {\n      filteredByDayEventsData = filteredByDayEventsData.filter((event) =>\n        event.data.members.some(({ id }) => id === sortingBy)\n      );\n    }\n\n    return (\n      <>\n        {[...Array(WORKING_DAY_TIMESLOTS_QUANTITY)].map((_, i) => {\n          const timeSlot = `${i + WORKING_DAY_START}:00`;\n\n          if (\n            filteredByDayEventsData.some(\n              (event) => event.data.time === timeSlot\n            )\n          ) {\n            return (\n              <li\n                key={`${day} ${timeSlot}`}\n                data-time={timeSlot}\n                data-day={day}\n              >\n                <Event\n                  event={filteredByDayEventsData.find(\n                    (event) => event.data.time === timeSlot\n                  )}\n                  setNewNotification={setNewNotification}\n                />\n              </li>\n            );\n          }\n\n          return (\n            <li\n              key={`${day} ${timeSlot}`}\n              data-time={timeSlot}\n              data-day={day}\n            />\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {[...Array(WORKING_DAY_TIMESLOTS_QUANTITY)].map((_, i) => {\n        const timeSlot = `${i + WORKING_DAY_START}:00`;\n\n        return (\n          <li\n            key={`${day} ${timeSlot}`}\n            data-time={`${timeSlot}`}\n            data-day={day}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default CalendarBodyColumn;\n","import React from 'react';\n\nimport {\n  WORKING_DAY_START,\n  WORKING_DAY_TIMESLOTS_QUANTITY,\n} from '../../../../utils/constants';\n\nfunction CalendarBodyHoursColumn() {\n  return (\n    <>\n      {[...Array(WORKING_DAY_TIMESLOTS_QUANTITY)].map((_, i) => {\n        const timeSlot = `${i + WORKING_DAY_START}:00`;\n\n        return <li key={timeSlot}>{timeSlot}</li>;\n      })}\n    </>\n  );\n}\n\nexport default CalendarBodyHoursColumn;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CalendarBodyColumn from './Calendar-body-column';\nimport CalendarBodyHoursColumn from './Calendar-body-hours-column';\nimport { DAYS } from '../../../utils/constants';\n\nfunction CalendarBody({ events, sortingBy, setNewNotification }) {\n  return (\n    <div className=\"calendar__table\">\n      <ul className=\"calendar__table-column\" data-day=\"Name\">\n        <li className=\"calendar__table-column-header\">Name</li>\n        <CalendarBodyHoursColumn />\n      </ul>\n\n      {DAYS.map((day) => (\n        <ul key={day} className=\"calendar__table-column\" data-day={day}>\n          <li className=\"calendar__table-column-header\">{day}</li>\n          <CalendarBodyColumn\n            day={day}\n            events={events}\n            sortingBy={sortingBy}\n            setNewNotification={setNewNotification}\n          />\n        </ul>\n      ))}\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  events: state.events.entities,\n}))(CalendarBody);\n","import React, { useContext } from 'react';\nimport { userContext } from '../../../contexts/user-context';\n\nfunction CalendarFooter() {\n  const { sessionUser, setSessionUser } = useContext(userContext);\n\n  if (sessionUser) {\n    return (\n      <div className=\"calendar__footer\">\n        <div>\n          You are logged in as {sessionUser.data.name} (\n          {sessionUser.data.rights})\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-secondary\"\n          id=\"logOutButton\"\n          onClick={() => {\n            setSessionUser(null);\n          }}\n        >\n          Log out\n        </button>\n      </div>\n    );\n  }\n\n  return <div />;\n}\n\nexport default CalendarFooter;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport CalendarHeader from './Calendar-header';\nimport CalendarBody from './Calendar-body';\nimport CalendarFooter from './Calendar-footer';\n\nimport './style.scss';\n\nfunction Calendar({ setNewNotification }) {\n  const [sortingBy, setSortingBy] = useState('All members');\n\n  return (\n    <div className=\"calendar\">\n      <CalendarHeader setSortingBy={setSortingBy} />\n      <CalendarBody\n        sortingBy={sortingBy}\n        setNewNotification={setNewNotification}\n      />\n      <CalendarFooter />\n    </div>\n  );\n}\n\nexport default Calendar;\n","/* eslint-disable no-shadow */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport {\n  DAYS,\n  WORKING_DAY_TIMESLOTS_QUANTITY,\n  WORKING_DAY_START,\n} from '../../utils/constants';\nimport Notification from '../Notification';\nimport { loadEvents, postEvent } from '../../redux/actions';\n\nfunction CreateEventForm({\n  users,\n  events,\n  loadEvents,\n  postEvent,\n  setNewNotification,\n}) {\n  const setMembersChoosenByDefault = [...users].map((user) => ({\n    ...user,\n    isChoosen: false,\n  }));\n\n  const history = useHistory();\n\n  const [eventData, setEventData] = useState({});\n  const [isChoosenMembers, setIsChoosenMembers] = useState(\n    setMembersChoosenByDefault\n  );\n\n  const setMembers = () =>\n    setEventData({\n      ...eventData,\n      members: isChoosenMembers\n        .filter(({ isChoosen }) => isChoosen === true)\n        .map(({ id }) => ({ id })),\n    });\n\n  useEffect(() => {\n    setMembers();\n  }, [isChoosenMembers]);\n\n  useEffect(() => {\n    setEventData({ day: DAYS[0], time: `${WORKING_DAY_START}:00` });\n  }, []);\n\n  const membersDropdown = (\n    <div className=\"create-event__form-input_multiselect\">\n      <div className=\"form-check\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          id=\"allMembersCheckbox\"\n          value=\"All members\"\n          onChange={(ev) => {\n            const isChecked = ev.target.checked;\n\n            if (isChecked) {\n              return setIsChoosenMembers(\n                [...isChoosenMembers].map((member) => ({\n                  ...member,\n                  isChoosen: true,\n                }))\n              );\n            }\n\n            return setIsChoosenMembers(\n              [...isChoosenMembers].map((member) => ({\n                ...member,\n                isChoosen: false,\n              }))\n            );\n          }}\n        />\n        <label className=\"form-check-label\" htmlFor=\"allMembersCheckbox\">\n          All members\n        </label>\n      </div>\n\n      {isChoosenMembers.map((user) => (\n        <div key={user.id} className=\"form-check\">\n          <input\n            className=\"form-check-input member\"\n            type=\"checkbox\"\n            data-userid={user.id}\n            value={user.id}\n            checked={user.isChoosen}\n            onChange={(ev) => {\n              setIsChoosenMembers(\n                [...isChoosenMembers].map((member) => {\n                  const userId = ev.target.getAttribute('data-userid');\n\n                  if (member.id === userId) {\n                    console.log(member.isChoosen);\n                    return { ...member, isChoosen: !member.isChoosen };\n                  }\n\n                  return member;\n                })\n              );\n            }}\n          />\n          <label className=\"form-check-label\">{user.data.name}</label>\n        </div>\n      ))}\n    </div>\n  );\n\n  const daysDropdown = (\n    <div className=\"create-event__form-input\">\n      <select\n        className=\"form-select form-select-lg\"\n        onChange={(event) =>\n          setEventData({\n            ...eventData,\n            day: event.target.value,\n          })\n        }\n      >\n        {DAYS.map((day) => (\n          <option key={day} data-day={day} value={day}>\n            {day}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n\n  const hoursDropdown = (\n    <div className=\"create-event__form-input\">\n      <select\n        className=\"form-select form-select-lg\"\n        onChange={(event) =>\n          setEventData({\n            ...eventData,\n            time: event.target.value,\n          })\n        }\n      >\n        {[...Array(WORKING_DAY_TIMESLOTS_QUANTITY)].map((_, i) => {\n          const timeSlot = `${i + WORKING_DAY_START}:00`;\n\n          return (\n            <option data-time={timeSlot} key={timeSlot}>\n              {timeSlot}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n\n    // check is new event data full & fetch response\n    if (\n      eventData.name &&\n      eventData.members &&\n      eventData.members.length &&\n      eventData.day &&\n      eventData.time\n    ) {\n      // check is time slot is empty\n      if (\n        events.some(\n          ({ data }) =>\n            data.day === eventData.day && data.time === eventData.time\n        )\n      ) {\n        return setNewNotification(\n          <Notification\n            message=\"This time slot is already occupied. Please choose another day or time\"\n            status=\"warning\"\n          />\n        );\n      }\n\n      const isPosted = await postEvent(eventData);\n\n      if (isPosted) {\n        setNewNotification(\n          <Notification\n            message=\"API: event posted successfully\"\n            status=\"successful\"\n          />\n        );\n\n        loadEvents();\n\n        return setTimeout(() => {\n          history.push('/meeting-planning-calendar-react');\n        }, 2000);\n      }\n\n      return setNewNotification(\n        <Notification message=\"Something went wrong\" status=\"warning\" />\n      );\n    }\n\n    return setNewNotification(\n      <Notification message=\"Please, fill out all fields\" status=\"warning\" />\n    );\n  };\n\n  return (\n    <div>\n      <form className=\"create-event__form\" onSubmit={handleSubmit}>\n        <div className=\"create-event__form-element\">\n          <div className=\"create-event__form-description\">\n            Name of the event\n          </div>\n          <div className=\"create-event__form-input\">\n            <input\n              placeholder=\"Type here\"\n              type=\"search\"\n              className=\"form-control\"\n              data-name=\"name\"\n              onChange={(event) =>\n                setEventData({\n                  ...eventData,\n                  name: event.target.value,\n                })\n              }\n            />\n          </div>\n        </div>\n\n        <div className=\"create-event__form-element\">\n          <div className=\"create-event__form-description\">Participants</div>\n          {membersDropdown}\n        </div>\n\n        <div className=\"create-event__form-element\">\n          <div className=\"create-event__form-description\">Day</div>\n          {daysDropdown}\n        </div>\n\n        <div className=\"create-event__form-element\">\n          <div className=\"create-event__form-description\">Time</div>\n          {hoursDropdown}\n        </div>\n\n        <div className=\"create-event__form-element\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-outline-dark create-event__button_create\"\n          >\n            Create\n          </button>\n        </div>\n\n        <div className=\"create-event__form-element\">\n          <Link to=\"/meeting-planning-calendar-react\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-dark create-event__button_cancel\"\n            >\n              Cancel\n            </button>\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default connect(\n  (state) => ({\n    users: state.users.entities,\n    events: state.events.entities,\n  }),\n  { loadEvents, postEvent }\n)(CreateEventForm);\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useContext } from 'react';\n\nimport { connect } from 'react-redux';\nimport { Modal, Button } from 'react-bootstrap';\nimport { userContext } from '../../contexts/user-context';\n\nfunction LogInModal({ users, loadingUsers, loadedUsers }) {\n  const { sessionUser, setSessionUser } = useContext(userContext);\n  const [sessionUserName, setSessionUserName] = useState(null);\n\n  const [showModal, setShowModal] = useState(null);\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n\n  useEffect(() => {\n    if (!sessionUser) {\n      handleShowModal();\n      if (!loadingUsers && loadedUsers) {\n        setSessionUserName(users[0].data.name);\n      }\n    }\n  }, [sessionUser]);\n\n  const onSubmitSessionUser = () => {\n    handleCloseModal();\n\n    if (!sessionUserName) {\n      return setSessionUser(users[0]);\n    }\n\n    return setSessionUser(() =>\n      users.find((user) => user.data.name === sessionUserName)\n    );\n  };\n\n  return (\n    <Modal\n      show={showModal}\n      onHide={handleCloseModal}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header>\n        <Modal.Title>Who are You?</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"calendar__header_handling-dropdown\">\n          <select\n            className=\"form-select form-select-lg\"\n            id=\"membersDropdownModal\"\n            onChange={(ev) => setSessionUserName(ev.target.value)}\n          >\n            {users.map((user) => (\n              <option\n                key={user.id}\n                value={user.data.name}\n                data-rights={user.data.rights}\n              >\n                {user.data.name} ({user.data.rights})\n              </option>\n            ))}\n          </select>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onSubmitSessionUser}>\n          Submit\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default connect((state) => ({\n  users: state.users.entities,\n  loadingUsers: state.users.loading,\n  loadedUsers: state.users.loaded,\n}))(LogInModal);\n","/* eslint-disable consistent-return */\n/* eslint-disable no-shadow */\n/* eslint-disable no-return-assign */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useReducer } from 'react';\nimport { connect } from 'react-redux';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { Route } from 'react-router-dom';\nimport Calendar from '../../components/Calendar/Calendar';\nimport CreateEventForm from '../../components/Create-event-form';\nimport LogInModal from '../../components/Login-modal';\nimport Notification from '../../components/Notification';\n\nfunction CalendarPage({\n  users,\n  loadingUsers,\n  loadedUsers,\n  errorUsers,\n  events,\n  loadingEvents,\n  loadedEvents,\n  errorEvents,\n}) {\n  const initialState = { notificationsStore: [] };\n\n  function reducer(state, action) {\n    const croppedNotifications = [\n      ...state.notificationsStore.slice(state.notificationsStore.length - 5),\n    ];\n\n    switch (action.type) {\n      case 'showNotification':\n        return {\n          notificationsStore: [\n            ...croppedNotifications,\n            action.newNotificationData,\n          ],\n        };\n      default:\n        throw new Error();\n    }\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const setNewNotification = (notification) => {\n    const newNotificationData = {\n      notification,\n      isShow: true,\n      handleIsShow() {\n        setTimeout(() => (newNotificationData.isShow = false), 2000);\n      },\n    };\n\n    newNotificationData.handleIsShow();\n\n    dispatch({\n      type: 'showNotification',\n      newNotificationData,\n    });\n  };\n\n  // set Notification after getting users\n  useEffect(() => {\n    if (!loadingUsers && loadedUsers) {\n      // check if users downloaded, but no data\n      if (users[0].data.name === 'guest') {\n        return setNewNotification(\n          <Notification\n            message=\"API: users downloaded successfully, but... no data yet\"\n            status=\"successful\"\n          />\n        );\n      }\n\n      return setNewNotification(\n        <Notification\n          message=\"API: users downloaded successfully\"\n          status=\"successful\"\n        />\n      );\n    }\n\n    if (errorUsers) {\n      return setNewNotification(\n        <Notification message=\"API: error with loading users\" status=\"error\" />\n      );\n    }\n\n    if (!loadingEvents && !loadedEvents) {\n      return setNewNotification(\n        <Notification\n          message=\"API: something went wrong with loading users\"\n          status=\"warning\"\n        />\n      );\n    }\n  }, [loadingUsers, loadedUsers, errorUsers]);\n\n  useEffect(() => {\n    if (!loadingEvents && loadedEvents) {\n      // check if events downloaded, but no data\n      if (!events.length) {\n        return setNewNotification(\n          <Notification\n            message=\"API: events downloaded successfully, but... no data yet\"\n            status=\"successful\"\n          />\n        );\n      }\n\n      return setNewNotification(\n        <Notification\n          message=\"API: events downloaded successfully\"\n          status=\"successful\"\n        />\n      );\n    }\n\n    if (errorEvents) {\n      return setNewNotification(\n        <Notification message=\"API: error with loading events\" status=\"error\" />\n      );\n    }\n\n    if (!loadingEvents && !loadedEvents) {\n      return setNewNotification(\n        <Notification\n          message=\"API: something went wrong with loading events\"\n          status=\"warning\"\n        />\n      );\n    }\n  }, [loadingEvents, loadedEvents, errorEvents]);\n\n  const renderedNotifications = state.notificationsStore.map(\n    ({ notification, isShow }) => {\n      if (isShow === true)\n        return <React.Fragment key={uuid()}>{notification}</React.Fragment>;\n\n      return null;\n    }\n  );\n\n  return (\n    <>\n      <Route path=\"/meeting-planning-calendar-react\" exact>\n        <LogInModal />\n        <Calendar setNewNotification={setNewNotification} />\n      </Route>\n\n      <Route path=\"/meeting-planning-calendar-react/create-event\">\n        <CreateEventForm setNewNotification={setNewNotification} />\n      </Route>\n\n      {/* Notifications container  */}\n      <div aria-live=\"polite\" aria-atomic=\"true\" className=\"position-relative\">\n        <div className=\"toast-container position-fixed bottom-0 end-0 p-3\">\n          {renderedNotifications}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default connect((state) => ({\n  users: state.users.entities,\n  loadingUsers: state.users.loading,\n  loadedUsers: state.users.loaded,\n  errorUsers: state.users.error,\n  events: state.events.entities,\n  loadingEvents: state.events.loading,\n  loadedEvents: state.events.loaded,\n  errorEvents: state.events.error,\n}))(CalendarPage);\n","import React from 'react';\n\nfunction ErrorPage() {\n  return (\n    <div className=\"error-404\">\n      <h1 className=\"page-title\">Страница не найдена</h1>\n      <p>Извините, страница не существует</p>\n    </div>\n  );\n}\n\nexport default ErrorPage;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/prop-types */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { UserProvider } from '../../contexts/user-context';\nimport CalendarPage from '../../pages/Calendar-page';\nimport ErrorPage from '../../pages/error404/Error-page';\nimport { loadUsers, loadEvents } from '../../redux/actions';\n\nfunction App({ loadUsers, loadingUsers, loadedUsers, loadEvents }) {\n  const [sessionUser, setSessionUser] = useState(null);\n\n  useEffect(() => {\n    loadUsers();\n    loadEvents();\n  }, [loadUsers, loadEvents]);\n\n  if (loadingUsers && !loadedUsers) {\n    return <div />;\n  }\n\n  return (\n    <UserProvider value={{ sessionUser, setSessionUser }}>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/meeting-planning-calendar-react\" />\n        <Route path=\"/meeting-planning-calendar-react\">\n          <CalendarPage />\n        </Route>\n\n        <Route path=\"/error\" component={ErrorPage} />\n      </Switch>\n    </UserProvider>\n  );\n}\n\nexport default connect(\n  (state) => ({\n    loadingUsers: state.users.loading,\n    loadedUsers: state.users.loaded,\n    loadingEvents: state.events.loading,\n    loadedEvents: state.events.loaded,\n  }),\n  { loadUsers, loadEvents }\n)(App);\n","import {\n  REQUEST,\n  SUCCESS,\n  FAILURE,\n  LOAD_EVENTS,\n  POST_EVENT,\n  DELETE_EVENT,\n} from '../constants';\n\nconst initialState = {\n  entities: [],\n  loading: false,\n  loaded: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  const { type, data, deletingEventId, error } = action;\n\n  switch (type) {\n    case LOAD_EVENTS + REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case LOAD_EVENTS + SUCCESS:\n      return {\n        ...state,\n        entities: data,\n        loading: false,\n        loaded: true,\n      };\n    case LOAD_EVENTS + FAILURE:\n      return {\n        ...state,\n        loading: false,\n        loaded: false,\n        error,\n      };\n\n    case POST_EVENT:\n      return {\n        ...state,\n      };\n\n    case DELETE_EVENT:\n      return {\n        ...state,\n        entities: [\n          ...state.entities.filter((event) => event.id !== deletingEventId),\n        ],\n      };\n\n    default:\n      return state;\n  }\n};\n","import { REQUEST, SUCCESS, FAILURE, LOAD_USERS } from '../constants';\n\nconst initialState = {\n  entities: [],\n  loading: false,\n  loaded: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  const { type, data, error } = action;\n\n  switch (type) {\n    case LOAD_USERS + REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case LOAD_USERS + SUCCESS:\n      return {\n        ...state,\n        entities: data,\n        loading: false,\n        loaded: true,\n      };\n    case LOAD_USERS + FAILURE:\n      return {\n        ...state,\n        loading: false,\n        loaded: false,\n        error,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport events from './events';\nimport users from './users';\n\nexport default combineReducers({\n  events,\n  users,\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducer';\n\nconst enhancer = applyMiddleware(thunk);\n\nexport default createStore(reducer, composeWithDevTools(enhancer));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}